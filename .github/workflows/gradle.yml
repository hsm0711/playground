# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: '/home/runner/work/playground/playground/service.json'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: make service.json
      run: echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > /home/runner/work/playground/playground/service.json
    #- name: Build with Gradle
    #  run: ./gradlew build
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    #- id: compute-ssh
    #  uses: google-github-actions/ssh-compute@v0
    #  with:
    #    instance_name: '${{ secrets.GCP_INSTANCE_NAME }}'
    #    zone: 'us-west1-b'
    #    user: '${{ secrets.GCP_USER }}'
    #    ssh_private_key: '${{ secrets.GCP_SSH_KEY }}'
    #    command: ~/test.sh
    - id: gcloud
      name: gcloud
      run: |-
        gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} --zone "us-west1-b" --command "~/test.sh"
    #- name: Deploy to Compute Engine
    #  run: |
    #    gcloud compute scp build/libs/playground.jar ${{ secrets.GCP_INSTANCE_NAME }}:${{ secrets.DEPLOY_DIR }}
    #    gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} --zone "us-west1-b" --command "sudo systemctl restart my-application.service"
