# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build & Deploy

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read
  id-token: write

jobs:
  test:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: temurin
        cache: gradle
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Make service.json
      run: echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > /home/runner/work/playground/playground/service.json
      
    #- name: Test with Gradle
    #  run: ./gradlew test
    #  env:
    #    GOOGLE_APPLICATION_CREDENTIALS: '/home/runner/work/playground/playground/service.json'
      
  build:
    needs: test
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
          
    #- name: Set up JDK 11
    #  uses: actions/setup-java@v3
    #  with:
    #    java-version: 11
    #    distribution: temurin
    #    cache: gradle
        
    #- name: Grant execute permission for gradlew
    #  run: chmod +x gradlew
      
    #- name: Build with Gradle
    #  run: ./gradlew build -x test
      
    #- name: Artifact Upload Jar
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: playground-artifact
    #    path: build/libs/playground.jar
    #    retention-days: 14

  deploy:
    #needs: build
    
    runs-on: ubuntu-latest

    steps:
    - name: Set Timezone
      run: sudo timedatectl set-timezone Asia/Seoul
      
    - name: Get current date
      id: date
      run: echo "now=$(date +'%Y%m%d%H%M%S%N')" >> $GITHUB_OUTPUT
    #- name: Artifact Download Jar
    #  uses: actions/download-artifact@v3
    #  with:
    #    name: playground-artifact
    #    path: playground_${GITHUB_SHA::7}.jar
    
    - run: echo ${GITHUB_SHA::7}
    - run: echo ${{ steps.date.outputs.now }}
    - run: echo ${GITHUB_OUTPUT}
    - run: echo $(date +'%Y%m%d%H%M%S%N')
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      
    #- name: Copy Jar File
    #  run: |
    #    gcloud compute scp playground.jar ${{ secrets.GCP_INSTANCE_NAME }}:${{ secrets.GCP_DEPLOY_DIR }} --zone "us-west1-b"
      
    - name: Run Deploy Script
      run: |
        gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} --zone "us-west1-b" --command "echo ${{ secrets.GCP_RUNNER_PASSWORD }} | sudo -S -u ${{ secrets.GCP_USER }} ${{ secrets.GCP_WORK_DIR }}/shell/deploy.sh"
     
