server:
 port: 8080
   
springdoc:
  default-produces-media-type: application/json
  api-docs:
    groups:
      enabled: true
  swagger-ui:
    operations-sorter: alpha
    tags-sorter: alpha
    disable-swagger-default-url: true
    doc-expansion: list
    filter: true

spring:
 redis:
    port: ${sm://redis-port}
    host: ${sm://redis-url}
    password: ${sm://db-pwd}
 datasource:
  master:
   hikari:
    driver-class-name: org.postgresql.Driver
    jdbc-url: ${sm://jdbc-url}
    username: app_user
    password: ${sm://db-pwd}
    read-only: false
  slave: # DB replication 적용 후 replica DB로 정보 수정
   hikari:
    driver-class-name: org.postgresql.Driver
    jdbc-url: ${sm://jdbc-url}
    username: app_user
    password: ${sm://db-pwd}
    read-only: true
 jpa:
  database: postgresql
  database-platform: org.hibernate.dialect.PostgreSQLDialect
  defer-datasource-initialization: true
 mvc:
  pathmatch:
   matching-strategy: ANT_PATH_MATCHER
  throw-exception-if-no-handler-found: true
 web:
    resources:
      add-mappings: false

logging:
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr([${LOG_LEVEL_PATTERN:%5p}]) %clr([%10.10X{userId}]){magenta} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  level:
    root: info
    com:
      playground: debug
    org:
      springframework:
        messaging: debug

decorator:
  datasource:
    exclude-beans: dataSource
    p6spy:
      enable-logging: true

CRYPTO_PWD: ${sm://crypto-pwd}
CRYPTO_SALT: ${sm://crypto-pwd}
